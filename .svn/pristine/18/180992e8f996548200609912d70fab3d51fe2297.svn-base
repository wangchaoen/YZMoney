//
//  HomeProductCell.m
//  YZMoney
//
//  Created by 王朝恩 on 2017/3/20.
//  Copyright © 2017年 yzmoney. All rights reserved.
//

#import "HomeProductCell.h"
#import "YZLoginVC.h"
#import "YZProductModel.h"
#import "UIViewController+Utils.h"

@interface HomeProductCell ()
@property (nonatomic, strong) UIView *backView;
@property (nonatomic, strong) UILabel *typeLbl;
@property (nonatomic, strong) NSMutableArray *array;
@property (nonatomic, strong) NSMutableArray *lblArray;
@property (nonatomic, strong) NSMutableArray *contentLblArray;
@property (nonatomic, strong) UILabel *titleLbl1;
@property (nonatomic, strong) UILabel *titleLbl2;
@property (nonatomic, strong) UILabel *titleLbl3;
@property (nonatomic, strong) UILabel *contentLbl1;
@property (nonatomic, strong) UILabel *contentLbl2;
@property (nonatomic, strong) UILabel *contentLbl3;

@property (nonatomic, strong)UILabel * noLoginLbl;
@property (nonatomic, strong)UILabel * noFirstLoginLbl;
@property (nonatomic, strong)UIView *lineView;
@property (nonatomic, strong)CAGradientLayer *lineLayer;
@end

@implementation HomeProductCell

- (instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString *)reuseIdentifier {
    self = [super initWithStyle:style reuseIdentifier:reuseIdentifier];
    if (self) {
        self.backgroundColor = YZ_GRAY_COLOR;
        
        self.array = [NSMutableArray array];
        self.lblArray = [NSMutableArray array];
        self.contentLblArray = [NSMutableArray array];
        self.selectionStyle = UITableViewCellSelectionStyleNone;
        
        self.backView = [[UIView alloc]init];
        self.backView.backgroundColor = [UIColor whiteColor];
        self.backView.layer.cornerRadius = 2;
        self.backView.layer.masksToBounds = YES;
        [self.contentView addSubview:self.backView];
        
        [self creatView];
        
    }
    return self;
}
- (void)creatView {
    [self.backView addSubview:self.titleImage];
    [self.backView addSubview:self.titleLbl];
    [self.backView addSubview:self.typeLbl];
    [self.backView addSubview:self.footLbl];
    CAGradientLayer* gradientLayer = [CAGradientLayer layer];
    gradientLayer.frame = self.lineView.frame;
    gradientLayer.colors =  @[(id)[UIColor clearColor].CGColor,(id)RGBColor(244, 244, 244, 1).CGColor, (id)[UIColor clearColor].CGColor];
    gradientLayer.startPoint = CGPointMake(0, 2);
    gradientLayer.endPoint = CGPointMake(2, 2);
    
    [_backView.layer addSublayer:gradientLayer];
    
    gradientLayer.mask = self.lineView.layer;
    self.lineLayer = gradientLayer;
}
- (UIImageView *)titleImage {
    if (!_titleImage) {
        _titleImage = [[UIImageView alloc]initWithFrame:CGRectMake(10, 20, 30, 30)];
    }
    return _titleImage;
}
- (UILabel *)titleLbl {
    if (!_titleLbl) {
        _titleLbl = [[UILabel alloc]init];
        _titleLbl.font = [UIFont systemFontOfSize:16];
    }
    return _titleLbl;
}
- (UILabel *)noLoginLbl {
    if (!_noLoginLbl) {
        _noLoginLbl =[[UILabel alloc]init];
        _noLoginLbl.text = @"登录可见";
        _noLoginLbl.backgroundColor = YZ_RED_COLOR;
        _noLoginLbl.textColor = [UIColor whiteColor];
        _noLoginLbl.font = [UIFont systemFontOfSize:14];
        _noLoginLbl.hidden = YES;
        _noLoginLbl.layer.cornerRadius = 4;
        _noLoginLbl.layer.masksToBounds = YES;
        _noLoginLbl.textAlignment = NSTextAlignmentCenter;
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(loginAction)];
        _noLoginLbl.userInteractionEnabled = YES;
        [_noLoginLbl addGestureRecognizer:tap];
    }
    return _noLoginLbl;
}
- (UILabel *)noFirstLoginLbl {
    if (!_noFirstLoginLbl) {
        _noFirstLoginLbl =[[UILabel alloc]init];
        _noFirstLoginLbl.text = @"登录可见";
        _noFirstLoginLbl.backgroundColor = YZ_RED_COLOR;
        _noFirstLoginLbl.textColor = [UIColor whiteColor];
        _noFirstLoginLbl.font = [UIFont systemFontOfSize:14];
        _noFirstLoginLbl.hidden = YES;
        _noFirstLoginLbl.layer.cornerRadius = 4;
        _noFirstLoginLbl.layer.masksToBounds = YES;
        _noFirstLoginLbl.textAlignment = NSTextAlignmentCenter;
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(loginAction)];
        _noFirstLoginLbl.userInteractionEnabled = YES;
        [_noFirstLoginLbl addGestureRecognizer:tap];

    }
    return _noFirstLoginLbl;
}
- (UILabel *)typeLbl {
    if (!_typeLbl) {
        _typeLbl = [[UILabel alloc]init];
        _typeLbl.textColor = [UIColor whiteColor];
        _typeLbl.font = [UIFont systemFontOfSize:12];
        _typeLbl.text = @"在售";
        _typeLbl.textAlignment = NSTextAlignmentCenter;
        _typeLbl.backgroundColor = RGBColor(252, 139, 114, 1);
        _typeLbl.layer.cornerRadius = 2;
        _typeLbl.layer.masksToBounds = YES;
    }
    return _typeLbl;
}
- (UILabel *)footLbl {
    if (!_footLbl) {
        _footLbl = [[UILabel alloc]init];
        _footLbl.numberOfLines = 0;
        _footLbl.font = [UIFont systemFontOfSize:12];
        _footLbl.textColor = [UIColor lightGrayColor];
    }
    return _footLbl;
}
- (UIView *)lineView {
    if (!_lineView) {
        UIView *lineView = [[UIView alloc]init];
        lineView.alpha = .5;
        _lineView = lineView;
    }
    return _lineView;
}
#pragma mark - creatView
- (void)createLblActionWithArray:(NSArray *)array {
    for (UIView *view in self.array) {
        [view removeFromSuperview];
    }
    CGFloat upInterval = 5;
    CGFloat BF = CGRectGetMaxX(self.titleImage.frame) + 10;
    CGFloat interval = 5;
    NSInteger rows = 0;
    CGFloat beforeWith = BF;
    CGFloat width = S_W - 10;
    for (int i = 0; i < array.count; i++) {
        UILabel *but = [UILabel new];
    
        but.font = [UIFont systemFontOfSize:14];
        but.tag = i;
        but.layer.cornerRadius = 4;
        but.layer.masksToBounds = true;
        but.layer.borderColor = [UIColor lightGrayColor].CGColor;
        but.layer.borderWidth = 1;
        but.textColor = [UIColor lightGrayColor];
        but.text = array[i];
        but.textAlignment = NSTextAlignmentCenter;
        [self.array addObject:but];
        CGSize timeSize = [Utility calculatelblSizeForFont:14 scope:CGSizeMake(MAXFLOAT, 20) text:array[i]];
                    timeSize.width += 5;
        if (timeSize.width > width - 50) {
            timeSize.width = width - 70;
        }
        if ((width - beforeWith < timeSize.width) && (beforeWith != BF)) {
            rows += 1;
            beforeWith = BF;
        }
        but.frame = CGRectMake(beforeWith, upInterval + CGRectGetMaxY(self.titleLbl.frame) + 10 + rows * (25 + upInterval), timeSize.width + 5, 25);
        
        beforeWith = beforeWith + but.frame.size.width + interval;
        [self.contentView addSubview:but];
    }
}
- (void)createLblWithheight:(CGFloat)height{
    for (UIView *view in self.lblArray) {
        [view removeFromSuperview];
    }
    for (UIView *view in self.contentLblArray) {
        [view removeFromSuperview];
    }
    CGFloat width = S_W - 20;
    for (int i = 0; i < 3; i++) {
        UILabel *titleLbl = [[UILabel alloc]initWithFrame:CGRectMake(width / 3 * i + 20, height, width / 3, 20)];
        titleLbl.userInteractionEnabled = YES;
        if (i == 0) {
            titleLbl.textColor = YZ_RED_COLOR;
            titleLbl.font = [UIFont systemFontOfSize:16];
        }else {
        titleLbl.font = [UIFont systemFontOfSize:14];
        }
        titleLbl.textAlignment = NSTextAlignmentCenter;
        titleLbl.adjustsFontSizeToFitWidth = YES;
        [self.contentView addSubview:titleLbl];
        UILabel *contentLbl = [[UILabel alloc]initWithFrame:CGRectMake(i * width / 3 + 20, CGRectGetMaxY(titleLbl.frame) + 5, width / 3, 15)];
        contentLbl.font = [UIFont systemFontOfSize:14];
        contentLbl.textAlignment = NSTextAlignmentCenter;
        contentLbl.adjustsFontSizeToFitWidth = YES;
        [self.contentView addSubview:contentLbl];
        titleLbl.text = @"--";
        if (i == 1) {
            self.titleLbl1 = titleLbl;
            self.contentLbl1 = contentLbl;
            contentLbl.text = @"投资期限";
        }else if (i == 0){
            self.titleLbl2 = titleLbl;
            self.contentLbl2 = contentLbl;
            contentLbl.text = @"预期收益";
            [self.titleLbl2 addSubview:self.noFirstLoginLbl];
            self.noFirstLoginLbl.frame = CGRectMake((self.titleLbl2.frame.size.width - 70) / 2, -4, 70, 23);
        }else{
            contentLbl.text = @"返佣率";
            self.titleLbl3 = titleLbl;
            self.titleLbl3.textColor = YZ_RED_COLOR;
            self.contentLbl3 = contentLbl;
            self.noLoginLbl.frame = CGRectMake((self.titleLbl3.frame.size.width - 70) / 2, -4, 70, 23);
            [self.titleLbl3 addSubview:self.noLoginLbl];
        }
        [self.lblArray addObject:titleLbl];
        [self.contentLblArray addObject:contentLbl];
    }
}
- (void)calculateTitleLblFrame {
    CGSize typeSize = [Utility calculatelblSizeForFont:12 scope:CGSizeMake(100, 15) text: self.typeLbl.text];
    CGSize size = [Utility calculatelblSizeForFont:16 scope:CGSizeMake(S_W - 90, 20) text:self.titleLbl.text];
    self.titleLbl.frame = CGRectMake(CGRectGetMaxX(self.titleImage.frame) + 5, 20, size.width, 20);
    self.typeLbl.frame = CGRectMake(CGRectGetMaxX(self.titleLbl.frame) + 5, CGRectGetMinY(self.titleLbl.frame) + 2.5, typeSize.width + 5, 15);
}

+ (CGFloat) calculateRowsHeight:(NSArray *)array {
    CGFloat upInterval = 5;
    CGFloat BF = 50;
    CGFloat interval = 5;
    NSInteger rows = 0;
    CGFloat beforeWith = BF;
    CGFloat width = S_W - 10;
    for (NSString *str in array) {
        CGSize timeSize = [Utility calculatelblSizeForFont:14 scope:CGSizeMake(MAXFLOAT, 20) text:str];
        timeSize.width += 5;
        if (timeSize.width > width - 50) {
            timeSize.width = width - 70;
        }
        if ((width - beforeWith < timeSize.width) && (beforeWith != BF)) {
            rows += 1;
            beforeWith = BF;
        }
        
        beforeWith = beforeWith + timeSize.width + 5 + interval;
    }
    return 10 + (rows + 1) * (25 + upInterval);
}
#pragma mark - action 
- (void)loginAction {
    [Utility goLogin];
}
#pragma mark - GetRowsHeight
+ (CGFloat)returnRowsHeightWith:(YZProductModel *)model {
    NSMutableArray *arr = [NSMutableArray array];
    NSArray *arrayData = [model.paramMap[@"chanpingaikuang"][@"product_tag"] componentsSeparatedByString:@","];
    for (NSString *str in arrayData) {
        NSArray *strArray = [str componentsSeparatedByString:@"、"];
        for (NSString *str2 in strArray) {
            NSArray *strArray2 = [str2 componentsSeparatedByString:@"，"];
            for (NSString *str3 in strArray2) {
                [arr addObject:str3];
            }
            
        }
    }
    CGFloat lblHeight = [HomeProductCell calculateRowsHeight: arr];
    
    CGSize size = [Utility calculatelblSizeForFont:12 scope:CGSizeMake(S_W - 20, MAXFLOAT) text:model.progressDesc];
    CGFloat height = lblHeight + 30 + 40 + 30 + size.height + 10 + 10 + 10 + 10;
    return height;
}

#pragma mark - Assignment
- (void)sendModelViewIndexWith:(YZProductModel *)model {
    
    self.titleLbl.text = model.name;
    
    [self.titleImage sd_setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@%@",url_res, model.logoUrl]] placeholderImage:nil];
    
    if (![model.saleStatus[@"text"] isEqualToString:@"销售状态"]) {
        self.typeLbl.text = model.saleStatus[@"text"];
    }else {
        self.typeLbl.text = model.saleStatus[@"valueText"];
    }
    
    if (!model.onMarket) {
        self.typeLbl.text = @"失效";
    }
    //计算titleFrame
    [self calculateTitleLblFrame];
    
    //创建标签
    NSMutableArray *arr = [NSMutableArray array];
    NSArray *arrayData = [model.paramMap[@"chanpingaikuang"][@"product_tag"] componentsSeparatedByString:@","];
    for (NSString *str in arrayData) {
            NSArray *strArray = [str componentsSeparatedByString:@"、"];
        for (NSString *str2 in strArray) {
            NSArray *strArray2 = [str2 componentsSeparatedByString:@"，"];
            for (NSString *str3 in strArray2) {
                [arr addObject:str3];
            }

        }
    }
    [self createLblActionWithArray: arr];
    //获得标签高度
    CGFloat height = [HomeProductCell calculateRowsHeight: arr];
    height = height + 5 + CGRectGetMaxY(self.titleImage.frame);
    // 创建下行lbl
    [self createLblWithheight:height];
    self.titleLbl1.text = [model.cycle[@"valueText"] length] ? model.cycle[@"valueText"] : @"--";
    
    CGSize size = [Utility calculatelblSizeForFont:12 scope:CGSizeMake(S_W - 20, MAXFLOAT) text:model.progressDesc];
    self.footLbl.text = model.progressDesc;
    self.footLbl.frame = CGRectMake(10, height + 60, S_W - 20, size.height + 10);
    self.backView.frame = CGRectMake(5, 5, S_W - 10, CGRectGetMaxY(self.footLbl.frame) + 10);
    
    self.lineView.frame = CGRectMake(40, height + 50, CGRectGetWidth(self.backView.frame) - 40 * 2, 1);
    self.lineLayer.frame = self.lineView.frame;
    [self.backView addSubview:self.lineView];

    NSString *str2 = @"";
    self.titleLbl2.text =  [model.expectedIncome[@"valueText"] length] ? model.expectedIncome[@"valueText"]:@"--" ;
    if (ISLOGIN) {
        self.noLoginLbl.hidden = YES;
        if (model.paybackRate.length) {
            self.titleLbl3.text = model.paybackRate;
        }else {
            if (model.profitList.count > 0) {
                NSDictionary *dic = model.profitList[0];
                if (dic) {
                    self.titleLbl3.text = dic[@"paybackRateView"] ? dic[@"paybackRateView"] : @"--";
                }else {
                    self.titleLbl3.text = @"--";
                }

            }else {
                self.titleLbl3.text = @"--";

            }
        }
    }else{
        self.titleLbl3.text = @"";
        self.noLoginLbl.hidden = NO;
    }
    self.contentLbl1.text = @"投资期限";
    if ([model.productType[@"code"] isEqualToString:@"xintuochanpin"]) {
        //信托
        //预期收益
        //投资期限
        //返佣率
        self.titleLbl2.text = [model.expectedIncome[@"valueText"] length] ? model.expectedIncome[@"valueText"]:@"--";
        str2 = @"预期收益";
    }else if ([model.productType[@"code"] isEqualToString:@"ziguanjihua"]) {
        //资管
        //基准收益
        //投资期限
        //返佣率
        str2 = @"基准收益";
    }else if ([model.productType[@"code"] isEqualToString:@"simujijin"]) {
        //私募
        //基金经理
        //累计净值
        //返佣率
        self.contentLbl1.text = @"累计净值";
        self.titleLbl1.text = [model.sumNetValueView length] ? model.sumNetValueView : @"--";
        str2 = @"基金经理";
        self.titleLbl2.text = [model.fundManager[@"name"] length] ? model.fundManager[@"name"] : @"--";
    }else if ([model.productType[@"code"] isEqualToString:@"pevc"] || [model.productType[@"code"] isEqualToString:@"PEVC"]) {
        //PE/VC
        //管理机构
        //投资期限
        //返佣率
        str2 = @"管理机构";
        self.titleLbl2.text = [[model.managerComp valueForKey:@"name"] length]?[model.managerComp valueForKey:@"name"]:@"--";
    }else {
        //债券
        //基准收益
        //投资期限
        //返佣率
        str2 = @"基准收益";
    }
    self.contentLbl2.text = str2;
    
    if ([model.productType[@"code"] isEqualToString:@"xintuochanpin"] || [model.productType[@"code"] isEqualToString:@"simujijin"]) {
        self.noFirstLoginLbl.hidden = YES;
    }else {
        if (!ISLOGIN) {
            self.noFirstLoginLbl.hidden = NO;
            self.titleLbl2.text = @"";
        }else{
            self.noFirstLoginLbl.hidden = YES;
        }
    }
}
@end
